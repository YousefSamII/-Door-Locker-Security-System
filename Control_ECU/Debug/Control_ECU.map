Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./UART.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./Control_main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./Control_main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

SystemOperation     0x1               ./Control_main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./Buzzer.o
LOAD ./Control_main.o
LOAD ./DC_MOTOR.o
LOAD ./External_EEPROM.o
LOAD ./GPI0.o
LOAD ./TIMER1.o
LOAD ./TWI.o
LOAD ./Timer0.o
LOAD ./UART.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x15c2
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./Buzzer.o
 .text          0x00000092        0x0 ./Control_main.o
 .text          0x00000092        0x0 ./DC_MOTOR.o
 .text          0x00000092        0x0 ./External_EEPROM.o
 .text          0x00000092        0x0 ./GPI0.o
 .text          0x00000092        0x0 ./TIMER1.o
 .text          0x00000092        0x0 ./TWI.o
 .text          0x00000092        0x0 ./Timer0.o
 .text          0x00000092        0x0 ./UART.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.BUZZER_init
                0x00000092       0x22 ./Buzzer.o
                0x00000092                BUZZER_init
 .text.BUZZER_On
                0x000000b4       0x18 ./Buzzer.o
                0x000000b4                BUZZER_On
 .text.BUZZER_Off
                0x000000cc       0x18 ./Buzzer.o
                0x000000cc                BUZZER_Off
 .text.main     0x000000e4       0xba ./Control_main.o
                0x000000e4                main
 .text.recievePass
                0x0000019e       0x54 ./Control_main.o
                0x0000019e                recievePass
 .text.checkOnPass
                0x000001f2       0xfa ./Control_main.o
                0x000001f2                checkOnPass
 .text.checkOnEEPROMpass
                0x000002ec       0x9e ./Control_main.o
                0x000002ec                checkOnEEPROMpass
 .text.systemRun
                0x0000038a      0x156 ./Control_main.o
                0x0000038a                systemRun
 .text.systemOperation
                0x000004e0       0x16 ./Control_main.o
                0x000004e0                systemOperation
 .text.writeEEPROM
                0x000004f6       0x52 ./Control_main.o
                0x000004f6                writeEEPROM
 .text.openDoor
                0x00000548       0x46 ./Control_main.o
                0x00000548                openDoor
 .text.activeBuzzzer
                0x0000058e       0x1e ./Control_main.o
                0x0000058e                activeBuzzzer
 .text.timerTicks
                0x000005ac       0x18 ./Control_main.o
                0x000005ac                timerTicks
 .text.myOwnDelay
                0x000005c4       0x98 ./Control_main.o
                0x000005c4                myOwnDelay
 .text.DcMotor_init
                0x0000065c       0x36 ./DC_MOTOR.o
                0x0000065c                DcMotor_init
 .text.DcMotor_Rotate
                0x00000692       0xc6 ./DC_MOTOR.o
                0x00000692                DcMotor_Rotate
 .text.EEPROM_writeByte
                0x00000758       0x82 ./External_EEPROM.o
                0x00000758                EEPROM_writeByte
 .text.EEPROM_readByte
                0x000007da       0xc0 ./External_EEPROM.o
                0x000007da                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x0000089a      0x1d6 ./GPI0.o
                0x0000089a                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x00000a70      0x1d6 ./GPI0.o
                0x00000a70                GPIO_writePin
 .text.GPIO_readPin
                0x00000c46      0x136 ./GPI0.o
                0x00000c46                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x00000d7c       0x88 ./GPI0.o
                0x00000d7c                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00000e04       0x88 ./GPI0.o
                0x00000e04                GPIO_writePort
 .text.GPIO_readPort
                0x00000e8c       0x8a ./GPI0.o
                0x00000e8c                GPIO_readPort
 .text.__vector_7
                0x00000f16       0x66 ./TIMER1.o
                0x00000f16                __vector_7
 .text.__vector_9
                0x00000f7c       0x66 ./TIMER1.o
                0x00000f7c                __vector_9
 .text.Timer1_init
                0x00000fe2       0xe0 ./TIMER1.o
                0x00000fe2                Timer1_init
 .text.Timer1_setCallBack
                0x000010c2       0x24 ./TIMER1.o
                0x000010c2                Timer1_setCallBack
 .text.Timer1_deInit
                0x000010e6       0x28 ./TIMER1.o
                0x000010e6                Timer1_deInit
 .text.TWI_init
                0x0000110e       0x56 ./TWI.o
                0x0000110e                TWI_init
 .text.TWI_Start
                0x00001164       0x20 ./TWI.o
                0x00001164                TWI_Start
 .text.TWI_Stop
                0x00001184       0x16 ./TWI.o
                0x00001184                TWI_Stop
 .text.TWI_writeByte
                0x0000119a       0x2e ./TWI.o
                0x0000119a                TWI_writeByte
 .text.TWI_readByteWithACK
                0x000011c8       0x26 ./TWI.o
                0x000011c8                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x000011ee       0x26 ./TWI.o
                0x000011ee                TWI_readByteWithNACK
 .text.TWI_readStatus
                0x00001214       0x1e ./TWI.o
                0x00001214                TWI_readStatus
 .text.PWM_Timer0_Start
                0x00001232       0xc8 ./Timer0.o
                0x00001232                PWM_Timer0_Start
 .text.UART_init
                0x000012fa      0x15c ./UART.o
                0x000012fa                UART_init
 .text.UART_recieveByte
                0x00001456       0x1e ./UART.o
                0x00001456                UART_recieveByte
 .text.UART_sendByte
                0x00001474       0x2e ./UART.o
                0x00001474                UART_sendByte
 .text.UART_sendString
                0x000014a2       0x52 ./UART.o
                0x000014a2                UART_sendString
 .text.UART_recieveString
                0x000014f4       0x86 ./UART.o
                0x000014f4                UART_recieveString
 .text.libgcc   0x0000157a       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000157a                __udivmodsi4
 .text.libgcc   0x000015be        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000015be        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000015be        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000015be                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000015be        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000015be                exit
                0x000015be                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000015be        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000015c2                _etext = .

.data           0x00800060       0x10 load address 0x000015c2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./Buzzer.o
 .data          0x00800060        0x0 ./Control_main.o
 .data          0x00800060        0x0 ./DC_MOTOR.o
 .data          0x00800060        0x0 ./External_EEPROM.o
 .data          0x00800060        0x0 ./GPI0.o
 .data          0x00800060        0x0 ./TIMER1.o
 .data          0x00800060        0x0 ./TWI.o
 .data          0x00800060        0x0 ./Timer0.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.C.0.1424
                0x00800060        0x7 ./Control_main.o
 .rodata.C.10.1570
                0x00800067        0x6 ./Control_main.o
 .rodata.C.0.1264
                0x0080006d        0x3 ./DC_MOTOR.o
 *(.gnu.linkonce.d*)
                0x00800070                . = ALIGN (0x2)
                0x00800070                _edata = .
                0x00800070                PROVIDE (__data_end, .)

.bss            0x00800070        0x7
                0x00800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800070        0x0 ./Buzzer.o
 .bss           0x00800070        0x0 ./Control_main.o
 .bss           0x00800070        0x0 ./DC_MOTOR.o
 .bss           0x00800070        0x0 ./External_EEPROM.o
 .bss           0x00800070        0x0 ./GPI0.o
 .bss           0x00800070        0x0 ./TIMER1.o
 .bss           0x00800070        0x0 ./TWI.o
 .bss           0x00800070        0x0 ./Timer0.o
 .bss           0x00800070        0x0 ./UART.o
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.isPassTrue
                0x00800070        0x1 ./Control_main.o
                0x00800070                isPassTrue
 .bss.isUserPassTrue
                0x00800071        0x1 ./Control_main.o
                0x00800071                isUserPassTrue
 .bss.failedAttemp
                0x00800072        0x1 ./Control_main.o
                0x00800072                failedAttemp
 .bss.g_tick    0x00800073        0x1 ./Control_main.o
 .bss.g_ptr     0x00800074        0x2 ./TIMER1.o
 *(COMMON)
 COMMON         0x00800076        0x1 ./Control_main.o
                0x00800076                SystemOperation
                0x00800077                PROVIDE (__bss_end, .)
                0x000015c2                __data_load_start = LOADADDR (.data)
                0x000015d2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800077        0x0
                0x00800077                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800077                PROVIDE (__noinit_end, .)
                0x00800077                _end = .
                0x00800077                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2598
 *(.stab)
 .stab          0x00000000      0x27c ./Buzzer.o
 .stab          0x0000027c      0xb64 ./Control_main.o
                                0xc00 (size before relaxing)
 .stab          0x00000de0      0x2a0 ./DC_MOTOR.o
                                0x39c (size before relaxing)
 .stab          0x00001080      0x318 ./External_EEPROM.o
                                0x3cc (size before relaxing)
 .stab          0x00001398      0x5f4 ./GPI0.o
                                0x870 (size before relaxing)
 .stab          0x0000198c      0x33c ./TIMER1.o
                                0x5d0 (size before relaxing)
 .stab          0x00001cc8      0x33c ./TWI.o
                                0x5a0 (size before relaxing)
 .stab          0x00002004      0x1bc ./Timer0.o
                                0x4a4 (size before relaxing)
 .stab          0x000021c0      0x3d8 ./UART.o
                                0x684 (size before relaxing)

.stabstr        0x00000000     0x15b2
 *(.stabstr)
 .stabstr       0x00000000     0x15b2 ./Buzzer.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Control_ECU.elf elf32-avr)
LOAD linker stubs
